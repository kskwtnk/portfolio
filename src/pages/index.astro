---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import GlobalLayout from "../layouts/GlobalLayout.astro";
import Footer from "../components/Footer.astro";
import GrainyGradients from "../components/GrainyGradients.astro";

const allWorks = await getCollection("works");
---

<GlobalLayout>
  <div class="flex flex-col gap-16 px-3 sm:px-5 md:px-7">
    <div id="above-the-fold" class="h-screen">
      <GrainyGradients />
      <div class="mx-auto h-full max-w-7xl pt-16">
        <header id="header" class="grid gap-4 sm:gap-8 md:gap-12">
          <h1 id="grainy-gradient-observation-target">
            <ruby class="grid gap-2 sm:gap-4 md:gap-6"
              ><span class="text-5xl font-bold sm:text-7xl md:text-9xl"
                >綿貫&nbsp;佳祐</span
              ><rp>(</rp><rt
                class="flex text-2xl font-bold sm:text-3xl md:text-4xl"
                >ワタヌキ&nbsp;<span class="tracking-tighter">ケ</span><span
                  class="tracking-tighter">イ</span
                >スケ</rt
              ><rp>)</rp></ruby
            >
          </h1>
          <h2 class="text-m sm:text-l md:text-xl">
            ユーザーインターフェース / マークアップ / グラフィック
          </h2>
        </header>
        <span
          id="scroll-guide"
          class="scroll-guide fixed bottom-8 flex gap-1 text-sm"
          >下へスクロール</span
        >
      </div>
    </div>
    <section
      class="mx-auto grid w-[min(100%,_theme('width.content'))] grid-cols-1 gap-4 px-2 sm:grid-cols-11 sm:px-0"
    >
      <h2
        id="about-me"
        class="col-span-5 text-3xl font-bold sm:text-4xl md:text-5xl lg:col-span-4"
      >
        私について
      </h2>
      <div class="col-span-6 flex flex-col gap-5 text-md lg:col-span-7">
        <p>
          デジタルプロダクトのデザイナーです。理想に向き合い、言語化し、視覚化するプロセスを重視しています。静的な意匠だけでなく、データの構造や使用時の心地よさなども考慮に入れながら制作するよう心掛けています。
        </p>
        <p>
          答えの無い問いに向き合うのが好きで、自分自身の在り方や世の中を美しくするための方法について考えている時間が長いです。
        </p>
        <p>
          <a href="/about-me" class="text-cyan-600 underline"
            >詳細なプロフィール</a
          >
        </p>
      </div>
    </section>
    <section
      class="mx-auto grid w-[min(100%,_theme('width.content'))] grid-cols-4 flex-col gap-4 px-2 sm:px-0"
    >
      <h2
        id="works"
        class="col-span-full text-3xl font-bold sm:text-4xl md:text-5xl"
      >
        制作物
      </h2>
      {
        allWorks
          .sort((a, b) => a.data.sort - b.data.sort)
          .map((work) => (
            <a
              href={`${work.collection}/${work.slug}`}
              class="col-span-full grid gap-1 sm:col-span-2"
            >
              <Image
                src={work.data.cover}
                alt=""
                class="rounded-md"
                transition:name={`${work.slug}Image`}
              />
              <h3 class="text-md">{work.data.title}</h3>
            </a>
          ))
      }
    </section>
    <Footer />
  </div>
</GlobalLayout>

<style>
  .scroll-guide {
    writing-mode: vertical-lr;
  }
  .scroll-guide::after {
    content: url('data:image/svg+xml;utf-8,<svg fill="currentColor" width="18" height="14" viewBox="0 0 18 14" xmlns="http://www.w3.org/2000/svg"><path d="M1 0L0 1C3 2 7 5 9 7C11 5 15 2 18 1L17 0C13 1 9 4 9 4C9 4 5 1 1 0Z"/><path d="M1 7L0 8C3 9 7 12 9 14C11 12 15 9 18 8L17 7C13 8 9 11 9 11C9 11 5 8 1 7Z"/></svg>');
  }
</style>

<script>
  const scrollGuideObserverOptions = {
    root: null,
    rootMargin: "64px",
    threshold: 1,
  };

  function scrollGuideObserverCallback(entries: IntersectionObserverEntry[]) {
    const scrollGuide = document.getElementById("scroll-guide");
    if (!scrollGuide) return;
    entries.forEach((entry: { isIntersecting: boolean }) => {
      if (entry.isIntersecting) {
        scrollGuide.style.opacity = "1";
        scrollGuide.style.transform = "translateY(0)";
      } else {
        scrollGuide.style.opacity = "0";
        scrollGuide.style.transform = "translateY(-24px)";
        scrollGuide.style.transition =
          "opacity 300ms ease-in-out, transform 300ms ease-in-out";
      }
    });
  }

  const scrollGuideObserver = new IntersectionObserver(
    scrollGuideObserverCallback,
    scrollGuideObserverOptions
  );

  function toggleScrollGuideVisibility() {
    const observationTarget = document.getElementById("above-the-fold");
    if (!observationTarget) return;
    scrollGuideObserver.observe(observationTarget);
  }

  toggleScrollGuideVisibility();

  document.addEventListener("astro:after-swap", toggleScrollGuideVisibility);
</script>
